// Generated by view binder compiler. Do not edit!
package com.pesapal.pesapalsdk.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.pesapal.pesapalsdk.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentPesapalMpesaBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatButton btnSend;

  @NonNull
  public final CardView clMpesaMethod;

  @NonNull
  public final ConstraintLayout clMpesaPayment;

  @NonNull
  public final ConstraintLayout constraintLayout;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final LinearLayout llOne;

  @NonNull
  public final EditText phone;

  @NonNull
  public final TextInputLayout phoneLayout;

  @NonNull
  public final ConstraintLayout tvInst;

  @NonNull
  public final TextView tvInst1;

  @NonNull
  public final TextView tvInst2;

  @NonNull
  public final TextView tvInst3;

  @NonNull
  public final TextView tvInst4;

  @NonNull
  public final TextView tvInst5;

  private FragmentPesapalMpesaBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatButton btnSend, @NonNull CardView clMpesaMethod,
      @NonNull ConstraintLayout clMpesaPayment, @NonNull ConstraintLayout constraintLayout,
      @NonNull LinearLayout linearLayout2, @NonNull LinearLayout llOne, @NonNull EditText phone,
      @NonNull TextInputLayout phoneLayout, @NonNull ConstraintLayout tvInst,
      @NonNull TextView tvInst1, @NonNull TextView tvInst2, @NonNull TextView tvInst3,
      @NonNull TextView tvInst4, @NonNull TextView tvInst5) {
    this.rootView = rootView;
    this.btnSend = btnSend;
    this.clMpesaMethod = clMpesaMethod;
    this.clMpesaPayment = clMpesaPayment;
    this.constraintLayout = constraintLayout;
    this.linearLayout2 = linearLayout2;
    this.llOne = llOne;
    this.phone = phone;
    this.phoneLayout = phoneLayout;
    this.tvInst = tvInst;
    this.tvInst1 = tvInst1;
    this.tvInst2 = tvInst2;
    this.tvInst3 = tvInst3;
    this.tvInst4 = tvInst4;
    this.tvInst5 = tvInst5;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentPesapalMpesaBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentPesapalMpesaBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_pesapal_mpesa, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentPesapalMpesaBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSend;
      AppCompatButton btnSend = ViewBindings.findChildViewById(rootView, id);
      if (btnSend == null) {
        break missingId;
      }

      id = R.id.clMpesaMethod;
      CardView clMpesaMethod = ViewBindings.findChildViewById(rootView, id);
      if (clMpesaMethod == null) {
        break missingId;
      }

      id = R.id.clMpesaPayment;
      ConstraintLayout clMpesaPayment = ViewBindings.findChildViewById(rootView, id);
      if (clMpesaPayment == null) {
        break missingId;
      }

      id = R.id.constraintLayout;
      ConstraintLayout constraintLayout = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.llOne;
      LinearLayout llOne = ViewBindings.findChildViewById(rootView, id);
      if (llOne == null) {
        break missingId;
      }

      id = R.id.phone;
      EditText phone = ViewBindings.findChildViewById(rootView, id);
      if (phone == null) {
        break missingId;
      }

      id = R.id.phone_layout;
      TextInputLayout phoneLayout = ViewBindings.findChildViewById(rootView, id);
      if (phoneLayout == null) {
        break missingId;
      }

      id = R.id.tvInst;
      ConstraintLayout tvInst = ViewBindings.findChildViewById(rootView, id);
      if (tvInst == null) {
        break missingId;
      }

      id = R.id.tvInst1;
      TextView tvInst1 = ViewBindings.findChildViewById(rootView, id);
      if (tvInst1 == null) {
        break missingId;
      }

      id = R.id.tvInst2;
      TextView tvInst2 = ViewBindings.findChildViewById(rootView, id);
      if (tvInst2 == null) {
        break missingId;
      }

      id = R.id.tvInst3;
      TextView tvInst3 = ViewBindings.findChildViewById(rootView, id);
      if (tvInst3 == null) {
        break missingId;
      }

      id = R.id.tvInst4;
      TextView tvInst4 = ViewBindings.findChildViewById(rootView, id);
      if (tvInst4 == null) {
        break missingId;
      }

      id = R.id.tvInst5;
      TextView tvInst5 = ViewBindings.findChildViewById(rootView, id);
      if (tvInst5 == null) {
        break missingId;
      }

      return new FragmentPesapalMpesaBinding((ConstraintLayout) rootView, btnSend, clMpesaMethod,
          clMpesaPayment, constraintLayout, linearLayout2, llOne, phone, phoneLayout, tvInst,
          tvInst1, tvInst2, tvInst3, tvInst4, tvInst5);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
